// components/ui/Window/Window.module.scss
@import "../../../styles/variables.scss";
@import "../../../styles/mixins.scss";
@import "../../../styles/effects.scss";

.window {
  display: flex;
  flex-direction: column;
  background-color: rgba($vapor-dark-purple, 0.8);
  border: 2px solid $vapor-neon-pink;
  border-radius: 5px;
  box-shadow: 0 0 15px rgba($vapor-neon-pink, 0.5),
    0 0 30px rgba($vapor-cyan, 0.3);
  backdrop-filter: blur(5px);
  overflow: hidden;
  transition: box-shadow $transition-slow ease, opacity $transition-slow ease;

  &.active {
    opacity: 1;
    box-shadow: 0 0 20px rgba($vapor-neon-pink, 0.8),
      0 0 40px rgba($vapor-cyan, 0.4);
  }

  &:not(.active) {
    opacity: 0.85;
  }

  &.dragging {
    transition: none;
    will-change: transform;
    pointer-events: none;
    cursor: grabbing !important;
    user-select: none !important;
  }
}

.titleBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: linear-gradient(90deg, $vapor-neon-pink, $vapor-cyan);
  padding: 5px 10px;
  cursor: move;
}

.title {
  font-family: $font-vcr;
  font-size: 18px;
  font-weight: 700;
  color: white;
  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.windowControls {
  display: flex;
  gap: 5px;
}

.window-button {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  border: 1px solid rgba(255, 255, 255, 0.5);
  cursor: pointer;
}

.closeButton {
  @extend .window-button;
  background-color: #ff5f5f;

  &:hover {
    background-color: lighten(#ff5f5f, 10%);
    transform: scale(1.1);
  }
}

.minimizeButton {
  @extend .window-button;
  background-color: #ffbe5f;

  &:hover {
    background-color: lighten(#ffbe5f, 10%);
    transform: scale(1.1);
  }
}

.maximizeButton {
  @extend .window-button;
  background-color: #5fff5f;

  &:hover {
    background-color: lighten(#5fff5f, 10%);
    transform: scale(1.1);
  }
}

.content {
  flex: 1;
  overflow: auto;
  position: relative;
  background-color: rgba($vapor-dark-purple, 0.6);
  height: 100%;
  display: flex;
  flex-direction: column;

  &.dragging {
    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 50;
      pointer-events: none;
    }

    &::before {
      content: "Moving...";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: $vapor-text-light;
      font-family: $font-vcr;
      font-size: 18px;
      z-index: 51;
      opacity: 0.8;
      pointer-events: none;
    }
  }
}

// For canvas-based window rendering (required in the spec)
.canvasWindow {
  position: absolute;
  // Canvas window properties are mostly handled through JavaScript
  // This is just the container style
}

// Custom scrollbar for window content
.content {
  scrollbar-width: thin;
  scrollbar-color: $vapor-neon-pink rgba($vapor-dark-purple, 0.4);

  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  &::-webkit-scrollbar-track {
    background: rgba($vapor-dark-purple, 0.4);
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: linear-gradient(to bottom, $vapor-neon-pink, $vapor-cyan);
    border-radius: 4px;
    box-shadow: 0 0 5px rgba($vapor-neon-pink, 0.5);
  }

  &::-webkit-scrollbar-thumb:hover {
    background: $vapor-neon-pink;
    box-shadow: 0 0 8px rgba($vapor-neon-pink, 0.7);
  }
}
